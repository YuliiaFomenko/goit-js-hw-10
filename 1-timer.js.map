{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst datePicker = document.querySelector('#datetime-picker');\nconst startButton = document.querySelector('[data-start]');\nconst daysSpan = document.querySelector('[data-days]');\nconst hoursSpan = document.querySelector('[data-hours]');\nconst minutesSpan = document.querySelector('[data-minutes]');\nconst secondsSpan = document.querySelector('[data-seconds]');\n\nlet userSelectedDate = null;\nlet timerInterval = null;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const selectedDate = selectedDates[0];\n\n    if (selectedDate <= new Date()) {\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n        position: 'topRight',\n      });\n      startButton.disabled = true;\n    } else {\n      userSelectedDate = selectedDate;\n      startButton.disabled = false;\n    }\n  },\n};\n\nflatpickr(datePicker, options);\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction updateTimer() {\n  const timeDiff = userSelectedDate - new Date();\n\n  if (timeDiff <= 0) {\n    clearInterval(timerInterval);\n    datePicker.disabled = false;\n    startButton.disabled = true;\n    return;\n  }\n\n  const { days, hours, minutes, seconds } = convertMs(timeDiff);\n\n  daysSpan.textContent = addLeadingZero(days);\n  hoursSpan.textContent = addLeadingZero(hours);\n  minutesSpan.textContent = addLeadingZero(minutes);\n  secondsSpan.textContent = addLeadingZero(seconds);\n}\n\nstartButton.addEventListener('click', () => {\n  startButton.disabled = true;\n  datePicker.disabled = true;\n\n  updateTimer();\n  timerInterval = setInterval(updateTimer, 1000);\n});\n"],"names":["datePicker","startButton","daysSpan","hoursSpan","minutesSpan","secondsSpan","userSelectedDate","timerInterval","options","selectedDates","selectedDate","iziToast","flatpickr","addLeadingZero","value","convertMs","ms","days","hours","minutes","seconds","updateTimer","timeDiff"],"mappings":"+IAMA,MAAMA,EAAa,SAAS,cAAc,kBAAkB,EACtDC,EAAc,SAAS,cAAc,cAAc,EACnDC,EAAW,SAAS,cAAc,aAAa,EAC/CC,EAAY,SAAS,cAAc,cAAc,EACjDC,EAAc,SAAS,cAAc,gBAAgB,EACrDC,EAAc,SAAS,cAAc,gBAAgB,EAE3D,IAAIC,EAAmB,KACnBC,EAAgB,KAEpB,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,MAAMC,EAAeD,EAAc,CAAC,EAEhCC,GAAgB,IAAI,MACtBC,EAAS,MAAM,CACb,MAAO,QACP,QAAS,qCACT,SAAU,UAClB,CAAO,EACDV,EAAY,SAAW,KAEvBK,EAAmBI,EACnBT,EAAY,SAAW,GAE1B,CACH,EAEAW,EAAUZ,EAAYQ,CAAO,EAE7B,SAASK,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,SAASC,EAAUC,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAS,CAC1C,CAEA,SAASC,GAAc,CACrB,MAAMC,EAAWhB,EAAmB,IAAI,KAExC,GAAIgB,GAAY,EAAG,CACjB,cAAcf,CAAa,EAC3BP,EAAW,SAAW,GACtBC,EAAY,SAAW,GACvB,MACJ,CAEE,KAAM,CAAE,KAAAgB,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAS,EAAGL,EAAUO,CAAQ,EAE5DpB,EAAS,YAAcW,EAAeI,CAAI,EAC1Cd,EAAU,YAAcU,EAAeK,CAAK,EAC5Cd,EAAY,YAAcS,EAAeM,CAAO,EAChDd,EAAY,YAAcQ,EAAeO,CAAO,CAClD,CAEAnB,EAAY,iBAAiB,QAAS,IAAM,CAC1CA,EAAY,SAAW,GACvBD,EAAW,SAAW,GAEtBqB,EAAa,EACbd,EAAgB,YAAYc,EAAa,GAAI,CAC/C,CAAC"}